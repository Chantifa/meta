{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chant\\\\StudioProjects\\\\coronattack\\\\app\\\\client\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport '../styles/LogRegStyle.css';\nimport smileygmtrans from '../images/smileygmtrans.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [nickname, setnickname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [password2, setpassword2] = useState(\"\");\n  const [accountExists, setAccountExists] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      nickname,\n      email,\n      password,\n      password2\n    };\n    console.log(data);\n    axios.post('http://localhost:3001/users/register', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(response => {\n      setAccountExists(response.emailExists);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titleLogin\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgReg\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: smileygmtrans,\n        alt: \"regImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), accountExists && /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"This E-Mail adress is already registered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: nickname,\n          onChange: e => setnickname(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setemail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setpassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password2\",\n          name: \"password2\",\n          placeholder: \"Confirm Password\",\n          value: password2,\n          onChange: e => setpassword2(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Register\",\n          className: \"buttonNext\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"registerBtn\",\n        children: \"Already registered? Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"0GJdim8zPfNYW1jAdNcQ3+Ou2+0=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/chant/StudioProjects/coronattack/app/client/src/pages/Register.js"],"names":["React","useState","Link","smileygmtrans","axios","Register","nickname","setnickname","email","setemail","password","setpassword","password2","setpassword2","accountExists","setAccountExists","handleSubmit","e","preventDefault","data","console","log","post","method","mode","headers","body","JSON","stringify","then","res","json","response","emailExists","color","target","value"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,2BAAP;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AAAEb,MAAAA,QAAF;AAAYE,MAAAA,KAAZ;AAAmBE,MAAAA,QAAnB;AAA6BE,MAAAA;AAA7B,KAAb;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAf,IAAAA,KAAK,CAACkB,IAAN,CAAW,sCAAX,EAAmD;AAC/CC,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,IAAI,EAAC,MAF0C;AAG/CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB,kBAAlB;AACT,uCAA+B;AADtB,OAHsC;AAM/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AANyC,KAAnD,EAOGU,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQCF,IARD,CAQOG,QAAD,IAAc;AAChBjB,MAAAA,gBAAgB,CAACiB,QAAQ,CAACC,WAAV,CAAhB;AACH,KAVD;AAWH,GAhBD;;AAkBA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAK,QAAA,GAAG,EAAE9B,aAAV;AAAyB,QAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,EAKKW,aAAa,iBAAI;AAAI,MAAA,KAAK,EAAE;AAACoB,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALtB,eAMI;AAAM,MAAA,QAAQ,EAAElB,YAAhB;AAAA,8BACI;AAAA,+BACI;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,EAAE,EAAC,MAFH;AAGA,UAAA,IAAI,EAAC,MAHL;AAIA,UAAA,WAAW,EAAC,MAJZ;AAKA,UAAA,KAAK,EAAEV,QALP;AAMA,UAAA,QAAQ,EAAGW,CAAD,IAAOV,WAAW,CAACU,CAAC,CAACkB,MAAF,CAASC,KAAV,CAN5B;AAOA,UAAA,QAAQ;AAPR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,EAAE,EAAC,OAFP;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,WAAW,EAAC,OAJhB;AAKI,UAAA,KAAK,EAAE5B,KALX;AAMI,UAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACkB,MAAF,CAASC,KAAV,CAN7B;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAsBI;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,EAAE,EAAC,UAFP;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,WAAW,EAAC,UAJhB;AAKI,UAAA,KAAK,EAAE1B,QALX;AAMI,UAAA,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACkB,MAAF,CAASC,KAAV,CANhC;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAiCI;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,EAAE,EAAC,WAFP;AAGI,UAAA,IAAI,EAAC,WAHT;AAII,UAAA,WAAW,EAAC,kBAJhB;AAKI,UAAA,KAAK,EAAExB,SALX;AAKsB,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,YAAY,CAACI,CAAC,CAACkB,MAAF,CAASC,KAAV,CALnD;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjCJ,eA2CI;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,UAA3B;AAAsC,UAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA3CJ,eA8CI;AAAA;AAAA;AAAA;AAAA,cA9CJ,eA+CI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,SAAS,EAAC,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0DH;;GApFQ/B,Q;;KAAAA,Q;AAsFT,eAAeA,QAAf","sourcesContent":["import { React, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../styles/LogRegStyle.css';\r\nimport smileygmtrans from '../images/smileygmtrans.png';\r\nimport axios from 'axios';\r\n\r\nfunction Register() {\r\n\r\n    const [nickname, setnickname] = useState(\"\");\r\n    const [email, setemail] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [password2, setpassword2] = useState(\"\");\r\n    const [accountExists, setAccountExists] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const data = { nickname, email, password, password2 };\r\n        console.log(data);\r\n\r\n        axios.post('http://localhost:3001/users/register', {\r\n            method: 'POST',\r\n            mode:'cors',\r\n            headers: { \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n         },\r\n            body: JSON.stringify(data)\r\n        }).then(res => res.json())\r\n        .then((response) => {\r\n            setAccountExists(response.emailExists);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"titleLogin\">Register</h1>\r\n            <div className=\"imgReg\">\r\n                <img src={smileygmtrans} alt=\"regImg\"/>\r\n            </div>\r\n            {accountExists && <h1 style={{color: \"red\"}}>This E-Mail adress is already registered</h1>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <input \r\n                    type=\"text\" \r\n                    id=\"name\" \r\n                    name=\"name\" \r\n                    placeholder=\"Name\"\r\n                    value={nickname} \r\n                    onChange={(e) => setnickname(e.target.value)} \r\n                    required />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email} \r\n                        onChange={(e) => setemail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password} \r\n                        onChange={(e) => setpassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password2\"\r\n                        name=\"password2\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={password2} onChange={(e) => setpassword2(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input type=\"submit\" value=\"Register\" className=\"buttonNext\" />\r\n                </div>\r\n                <br />\r\n                <Link to=\"/login\" className=\"registerBtn\">Already registered? Login here</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}