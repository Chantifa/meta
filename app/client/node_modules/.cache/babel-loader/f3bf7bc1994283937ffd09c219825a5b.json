{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chant\\\\StudioProjects\\\\coronattack\\\\app\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport '../styles/DashboardStyle.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER = \"http://127.0.0.1:5000/\";\n\nfunction Dashboard() {\n  _s();\n\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const socket = io(SERVER);\n\n  const loadMessages = async () => {\n    // receive chat messages with .on (from chat room)\n    socket.on('chat from server', msg => {\n      const newMessageArray = [...messages];\n      newMessageArray.push(msg);\n      setMessages(newMessageArray);\n    });\n  };\n\n  useEffect(() => {\n    loadMessages();\n  }, // eslint-disable-next-line\n  []); // [messages] -> it stacks but overflows\n\n  const handleSubmit = e => {\n    e.preventDefault(); //save input field to 'inputValue and send it to server using the room chat from frontend\n\n    if (inputValue) {\n      socket.emit('chat from client', inputValue);\n      setInputValue(\"\");\n    }\n  };\n\n  const handleCreate = () => {\n    navigate('/creategame');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titleDash\",\n      children: \"Coronattack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"white\",\n        marginLeft: 80\n      },\n      children: \"Create or join a game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"createJoinBtn\",\n        style: {\n          backgroundColor: \"#3bb359\"\n        },\n        onClick: handleCreate,\n        children: \"Create a new game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"createJoinBtn\",\n        style: {\n          backgroundColor: \"#4aadbe\"\n        },\n        children: \"Join a game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"Chat here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"logoutBtn\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatWindow\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((message, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"liMessage\",\n            children: message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"CeB9TaQ4yJgsG+6eCsfqBIEWvfk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/chant/StudioProjects/coronattack/app/client/src/pages/Dashboard.js"],"names":["React","useState","useEffect","Link","useNavigate","io","SERVER","Dashboard","navigate","messages","setMessages","inputValue","setInputValue","socket","loadMessages","on","msg","newMessageArray","push","handleSubmit","e","preventDefault","emit","handleCreate","color","marginLeft","backgroundColor","target","value","map","message","index"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../styles/DashboardStyle.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { io } from \"socket.io-client\";\r\nconst SERVER = \"http://127.0.0.1:5000/\";\r\n\r\nfunction Dashboard() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const socket = io(SERVER);\r\n\r\n    const loadMessages = async () => {\r\n\r\n        // receive chat messages with .on (from chat room)\r\n        socket.on('chat from server', (msg) => {\r\n            const newMessageArray = [...messages];\r\n            newMessageArray.push(msg);\r\n            setMessages(newMessageArray);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadMessages();\r\n    },\r\n    // eslint-disable-next-line\r\n        []) // [messages] -> it stacks but overflows\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //save input field to 'inputValue and send it to server using the room chat from frontend\r\n        if(inputValue) {\r\n            socket.emit('chat from client', inputValue);\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n    navigate('/creategame');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"titleDash\">Coronattack</h1>\r\n            <h3 style={{color: \"white\", marginLeft: 80}}>Create or join a game</h3>\r\n            \r\n            <div>\r\n                <button className=\"createJoinBtn\" style={{backgroundColor: \"#3bb359\" }} onClick={handleCreate}>Create a new game</button>\r\n                <button className=\"createJoinBtn\" style={{backgroundColor: \"#4aadbe\" }}>Join a game</button>\r\n            </div>\r\n\r\n            <div>\r\n                <h1 style={{color: \"white\"}}>Chat here</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\"\r\n                        value={inputValue}\r\n                        onChange={(e) => setInputValue(e.target.value)} />\r\n                    <button type=\"submit\" className=\"send-button\">Send</button>\r\n                </form>\r\n            </div>\r\n\r\n            <br />\r\n            <Link to=\"/\" className=\"logoutBtn\">Logout</Link>\r\n\r\n            <div className=\"chatWindow\">\r\n                <ul>\r\n                    {messages.map((message, index) => {\r\n                        return <div key={index} className=\"liMessage\">{message}</div>\r\n                    })}\r\n\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n"]},"metadata":{},"sourceType":"module"}