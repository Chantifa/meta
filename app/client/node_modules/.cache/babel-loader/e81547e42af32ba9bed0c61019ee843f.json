{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chant\\\\StudioProjects\\\\coronattack\\\\app\\\\client\\\\src\\\\pages\\\\MainGame.js\";\nimport React, { Component } from 'react';\nimport '../styles/MainGameStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainGame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reset = () => {\n      this.ballY = this.Height / 2;\n      this.ballX = this.Width / 2;\n      this.ballSpeedX = -this.ballSpeedX;\n      this.ballSpeedY = 0;\n    };\n\n    this.drawAll = ctx => {\n      // screen\n      ctx.fillStyle = \"#661177\";\n      ctx.fillRect(0, 0, this.Width, this.Height); // middle dashed line\n\n      ctx.strokeStyle = \"#fff\";\n      ctx.setLineDash([10]);\n      ctx.beginPath();\n      ctx.moveTo(this.Width / 2, 0);\n      ctx.lineTo(this.Width / 2, this.Height);\n      ctx.stroke(); // score\n\n      ctx.font = \"30px Orbitron\";\n      ctx.fillStyle = \"#888\";\n      ctx.fillText(this.player1Score, this.Width / 2 / 2, 100);\n      ctx.fillText(this.player2Score, this.Width / 2 * 1.5, 100); // 2 rects\n\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, this.paddle1Y, 10, this.paddleWidth);\n      ctx.fillRect(this.Width - 10, this.paddle2Y, 10, this.paddleWidth); // ball\n\n      ctx.beginPath();\n      ctx.arc(this.ballX, this.ballY, this.ballRadius, 0, Math.PI * 2);\n      ctx.fill();\n    };\n\n    this.moveAll = keys => {\n      // ball movement\n      this.ballX += this.ballSpeedX;\n      this.ballY += this.ballSpeedY; // horizontal\n\n      if (this.ballX > this.Width || this.ballX < 0) {\n        // right side collision\n        if (this.ballX > this.Width / 2 && this.ballY >= this.paddle2Y && this.ballY <= this.paddle2Y + this.paddleWidth) {\n          this.ballSpeedX = -this.ballSpeedX;\n          let deltaY = this.ballY - (this.paddle2Y + this.paddleWidth / 2);\n          this.ballSpeedY = deltaY * 0.2;\n        } else if (this.ballX < this.Width / 2 && this.ballY >= this.paddle1Y && this.ballY <= this.paddle1Y + this.paddleWidth) {\n          this.ballSpeedX = -this.ballSpeedX;\n          let deltaY = this.ballY - (this.paddle1Y + this.paddleWidth / 2);\n          this.ballSpeedY = deltaY * 0.2;\n        } else {\n          if (this.ballX < this.Width / 2) {\n            this.player2Score++;\n\n            if (this.player2Score === 11) {\n              this.winner = \"PLAYER2\";\n              this.isGameOver = true;\n            }\n          } else {\n            this.player1Score++;\n\n            if (this.player1Score === 11) {\n              this.winner = \"PLAYER1\";\n              this.isGameOver = true;\n            }\n          }\n\n          this.reset();\n        }\n      } // vertical\n\n\n      if (this.ballY > this.Height || this.ballY < 0) {\n        this.ballSpeedY = -this.ballSpeedY;\n      } // ai paddle movement, limits at canvas boundaries to make it more efficient\n\n\n      if (!this.monkey) {\n        if (this.ballY > this.paddle2Y + this.paddleWidth / 3 && this.paddle2Y + this.paddleWidth < this.Height) {\n          this.paddle2Y += this.paddleSpeed;\n        } else if (this.ballY < this.paddle2Y + this.paddleWidth / 3 && this.paddle2Y > 0) {\n          this.paddle2Y -= this.paddleSpeed;\n        }\n      } else {\n        if (keys.isPressed(40) && this.paddle2Y + this.paddleWidth < this.Height) {\n          // DOWN\n          this.paddle2Y += this.paddleSpeed;\n        } else if (keys.isPressed(38) && this.paddle2Y > 0) {\n          // UP\n          this.paddle2Y -= this.paddleSpeed;\n        }\n      } // player1 paddle movement thanks to\n      // http://blog.mailson.org/2013/02/simple-pong-game-using-html5-and-canvas\n      // same limits as ai for efficiency\n\n\n      if (keys.isPressed(83) && this.paddle1Y + this.paddleWidth < this.Height) {\n        // DOWN\n        this.paddle1Y += this.paddleSpeed;\n      } else if (keys.isPressed(87) && this.paddle1Y > 0) {\n        // UP\n        this.paddle1Y -= this.paddleSpeed;\n      }\n    };\n\n    this.GameOver = ctx => {\n      this.ballSpeedY = 0;\n      this.paddle1Y = this.Height / 2 - this.paddleWidth / 2;\n      this.paddle2Y = this.Height / 2 - this.paddleWidth / 2;\n      this.player1Score = 0;\n      this.player2Score = 0;\n      ctx.textAlign = \"center\";\n\n      if (this.winner !== \"\") {\n        ctx.fillStyle = \"#888\";\n        ctx.font = \"36px Orbitron\";\n        ctx.fillText(this.winner + \" WON!\", this.Width / 2, 150);\n      } else {\n        this.ballY = this.Height / 2;\n        this.ballX = this.Width / 2;\n        this.drawAll(ctx);\n        this.isGameOver = true;\n      }\n\n      ctx.font = \"14px Roboto Mono\";\n      ctx.fillText(\"Click anywhere to start a new game.\", this.Width / 2, 200);\n      document.addEventListener(\"mousedown\", () => {\n        this.isGameOver = false;\n        this.winner = \"\";\n      });\n    };\n\n    this.gameWidth = document.documentElement.clientWidth;\n    this.gameHeight = document.documentElement.clientHeight; //TODO: save score to states and move them between components?\n\n    this.player1Score = 0;\n    this.player2Score = 0; //TODO: save and display the winner\n\n    this.winner = \"\";\n    this.isGameOver = false;\n    this.monkey = false; //ai :)\n\n    this.Width = this.gameWidth;\n    this.Height = this.gameHeight;\n    this.fps = 60;\n    this.paddleWidth = this.Height > 800 ? 200 : 100;\n    this.ballY = this.Height / 2;\n    this.ballX = this.Width / 2;\n    this.ballRadius = 6;\n    this.ballSpeedY = 0; //TODO: change the value below to select a difficulty\n\n    this.ballSpeedX = this.Height / 75;\n    this.paddle1Y = this.Height / 2 - this.paddleWidth / 2;\n    this.paddle2Y = this.Height / 2 - this.paddleWidth / 2;\n    this.paddleSpeed = this.Height > 800 ? 9 : 6;\n  }\n\n  componentDidMount() {\n    this.btnRight.style.display = 'none';\n    this.butt2.style.display = 'none';\n    this.update();\n  }\n\n  update() {\n    const ctx = this.canvas.getContext(\"2d\");\n\n    function KeyListener() {\n      this.pressedKeys = [];\n\n      this.keydown = e => {\n        this.pressedKeys[e.keyCode] = true;\n      };\n\n      this.keyup = e => {\n        this.pressedKeys[e.keyCode] = false;\n      };\n\n      document.addEventListener(\"keydown\", this.keydown.bind(this));\n      document.addEventListener(\"keyup\", this.keyup.bind(this));\n    }\n\n    KeyListener.prototype.isPressed = function (key) {\n      return this.pressedKeys[key] ? true : false;\n    };\n\n    KeyListener.prototype.addKeyPressListener = function (keyCode, callback) {\n      document.addEventListener(\"keypress\", e => {\n        if (e.keyCode === keyCode) callback(e);\n      });\n    };\n\n    const keys = new KeyListener(); // trigger 2 this.monkeys\n\n    this.butt1.addEventListener('click', () => {\n      this.ballY = this.Height / 2;\n      this.ballX = this.Width / 2;\n      this.GameOver(ctx);\n      this.monkey = true;\n      this.butt1.style.display = 'none';\n      this.butt2.style.display = 'initial';\n      this.btnRight.style.display = 'initial';\n    }); // trigger AI\n\n    this.butt2.addEventListener('click', () => {\n      this.GameOver(ctx);\n      this.monkey = false;\n      this.butt2.style.display = 'none';\n      this.butt1.style.display = 'initial';\n      this.btnRight.style.display = 'none';\n    }); // to block automatic start\n\n    this.GameOver(ctx); // default 60fps\n\n    setInterval(() => {\n      if (this.isGameOver === false) {\n        this.moveAll(keys);\n        this.drawAll(ctx);\n      } else {\n        this.GameOver(ctx);\n      }\n    }, 1000 / this.fps);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvas => {\n          this.canvas = canvas;\n        },\n        width: this.gameWidth,\n        height: this.gameHeight,\n        id: \"gameCanvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons buttonLeft\",\n        children: \"W\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons buttonLeft\",\n        id: \"buttonS\",\n        children: \"S\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: element => {\n          this.btnRight = element;\n        },\n        className: \"buttons buttonRight\",\n        id: \"buttonUp\",\n        children: \"Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: element => {\n          this.btnRight = element;\n        },\n        className: \"buttons buttonRight\",\n        children: \"Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: butt1 => {\n          this.butt1 = butt1;\n        },\n        className: \"buttons\",\n        id: \"butt1\",\n        children: \"vs Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: butt2 => {\n          this.butt2 = butt2;\n        },\n        className: \"buttons\",\n        id: \"butt2\",\n        children: \"2 Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MainGame;","map":{"version":3,"sources":["C:/Users/chant/StudioProjects/coronattack/app/client/src/pages/MainGame.js"],"names":["React","Component","MainGame","constructor","props","reset","ballY","Height","ballX","Width","ballSpeedX","ballSpeedY","drawAll","ctx","fillStyle","fillRect","strokeStyle","setLineDash","beginPath","moveTo","lineTo","stroke","font","fillText","player1Score","player2Score","paddle1Y","paddleWidth","paddle2Y","arc","ballRadius","Math","PI","fill","moveAll","keys","deltaY","winner","isGameOver","monkey","paddleSpeed","isPressed","GameOver","textAlign","document","addEventListener","gameWidth","documentElement","clientWidth","gameHeight","clientHeight","fps","componentDidMount","btnRight","style","display","butt2","update","canvas","getContext","KeyListener","pressedKeys","keydown","e","keyCode","keyup","bind","prototype","key","addKeyPressListener","callback","butt1","setInterval","render","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../styles/MainGameStyle.css';\r\n\r\nclass MainGame extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.gameWidth = document.documentElement.clientWidth;\r\n        this.gameHeight = document.documentElement.clientHeight;\r\n\r\n        //TODO: save score to states and move them between components?\r\n        this.player1Score = 0;\r\n        this.player2Score = 0;\r\n\r\n        //TODO: save and display the winner\r\n        this.winner = \"\";\r\n\r\n        this.isGameOver = false;\r\n        this.monkey = false; //ai :)\r\n        this.Width = this.gameWidth;\r\n        this.Height = this.gameHeight;\r\n        this.fps = 60;\r\n        this.paddleWidth = this.Height > 800 ? 200 : 100;\r\n        this.ballY = this.Height / 2;\r\n        this.ballX = this.Width / 2;\r\n        this.ballRadius = 6;\r\n        this.ballSpeedY = 0;\r\n\r\n        //TODO: change the value below to select a difficulty\r\n        this.ballSpeedX = this.Height / 75;\r\n\r\n        this.paddle1Y = this.Height / 2 - this.paddleWidth / 2;\r\n        this.paddle2Y = this.Height / 2 - this.paddleWidth / 2;\r\n        this.paddleSpeed = this.Height > 800 ? 9 : 6;\r\n    }\r\n    componentDidMount() {\r\n        this.btnRight.style.display = 'none';\r\n        this.butt2.style.display = 'none';\r\n        this.update();\r\n    }\r\n\r\n    reset = () => {\r\n        this.ballY = this.Height / 2;\r\n        this.ballX = this.Width / 2;\r\n        this.ballSpeedX = -this.ballSpeedX;\r\n        this.ballSpeedY = 0;\r\n    };\r\n    // draw everything on screen\r\n    drawAll = (ctx) => {\r\n        // screen\r\n        ctx.fillStyle = \"#661177\";\r\n        ctx.fillRect(0, 0, this.Width, this.Height);\r\n        // middle dashed line\r\n        ctx.strokeStyle = \"#fff\";\r\n        ctx.setLineDash([10]);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.Width / 2, 0);\r\n        ctx.lineTo(this.Width / 2, this.Height);\r\n        ctx.stroke();\r\n        // score\r\n        ctx.font = \"30px Orbitron\";\r\n        ctx.fillStyle = \"#888\";\r\n        ctx.fillText(this.player1Score, this.Width / 2 / 2, 100);\r\n        ctx.fillText(this.player2Score, (this.Width / 2) * 1.5, 100);\r\n        // 2 rects\r\n        ctx.fillStyle = \"#fff\";\r\n        ctx.fillRect(0, this.paddle1Y, 10, this.paddleWidth);\r\n        ctx.fillRect(this.Width - 10, this.paddle2Y, 10, this.paddleWidth);\r\n        // ball\r\n        ctx.beginPath();\r\n        ctx.arc(this.ballX, this.ballY, this.ballRadius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n    };\r\n    // move stuff begore drawing again\r\n    moveAll = (keys) => {\r\n        // ball movement\r\n        this.ballX += this.ballSpeedX;\r\n        this.ballY += this.ballSpeedY;\r\n\r\n        // horizontal\r\n        if (this.ballX > this.Width || this.ballX < 0) {\r\n            // right side collision\r\n            if (\r\n                this.ballX > this.Width / 2 &&\r\n                (this.ballY >= this.paddle2Y && this.ballY <= this.paddle2Y + this.paddleWidth)\r\n            ) {\r\n                this.ballSpeedX = -this.ballSpeedX;\r\n                let deltaY = this.ballY - (this.paddle2Y + this.paddleWidth / 2);\r\n                this.ballSpeedY = deltaY * 0.2;\r\n            } else if (\r\n                this.ballX < this.Width / 2 &&\r\n                (this.ballY >= this.paddle1Y && this.ballY <= this.paddle1Y + this.paddleWidth)\r\n            ) {\r\n                this.ballSpeedX = -this.ballSpeedX;\r\n                let deltaY = this.ballY - (this.paddle1Y + this.paddleWidth / 2);\r\n                this.ballSpeedY = deltaY * 0.2;\r\n            } else {\r\n                if (this.ballX < this.Width / 2) {\r\n                    this.player2Score++;\r\n                    if (this.player2Score === 11) {\r\n                        this.winner = \"PLAYER2\";\r\n                        this.isGameOver = true;\r\n                    }\r\n                } else {\r\n                    this.player1Score++;\r\n                    if (this.player1Score === 11) {\r\n                        this.winner = \"PLAYER1\";\r\n                        this.isGameOver = true;\r\n                    }\r\n                }\r\n                this.reset();\r\n            }\r\n        } // vertical\r\n        if (this.ballY > this.Height || this.ballY < 0) {\r\n            this.ballSpeedY = -this.ballSpeedY;\r\n        }\r\n        // ai paddle movement, limits at canvas boundaries to make it more efficient\r\n        if (!this.monkey) {\r\n            if (\r\n                this.ballY > this.paddle2Y + this.paddleWidth / 3 &&\r\n                this.paddle2Y + this.paddleWidth < this.Height\r\n            ) {\r\n                this.paddle2Y += this.paddleSpeed;\r\n            } else if (this.ballY < this.paddle2Y + this.paddleWidth / 3 && this.paddle2Y > 0) {\r\n                this.paddle2Y -= this.paddleSpeed;\r\n            }\r\n        } else {\r\n            if (keys.isPressed(40) && this.paddle2Y + this.paddleWidth < this.Height) {\r\n                // DOWN\r\n                this.paddle2Y += this.paddleSpeed;\r\n            } else if (keys.isPressed(38) && this.paddle2Y > 0) {\r\n                // UP\r\n                this.paddle2Y -= this.paddleSpeed;\r\n            }\r\n        }\r\n        // player1 paddle movement thanks to\r\n        // http://blog.mailson.org/2013/02/simple-pong-game-using-html5-and-canvas\r\n        // same limits as ai for efficiency\r\n        if (keys.isPressed(83) && this.paddle1Y + this.paddleWidth < this.Height) {\r\n            // DOWN\r\n            this.paddle1Y += this.paddleSpeed;\r\n        } else if (keys.isPressed(87) && this.paddle1Y > 0) {\r\n            // UP\r\n            this.paddle1Y -= this.paddleSpeed;\r\n        }\r\n    };\r\n    // draw default if changing game type, else save last draw\r\n    GameOver = (ctx) => {\r\n        this.ballSpeedY = 0;\r\n        this.paddle1Y = this.Height / 2 - this.paddleWidth / 2;\r\n        this.paddle2Y = this.Height / 2 - this.paddleWidth / 2;\r\n        this.player1Score = 0;\r\n        this.player2Score = 0;\r\n        ctx.textAlign = \"center\";\r\n        if (this.winner !== \"\") {\r\n            ctx.fillStyle = \"#888\";\r\n            ctx.font = \"36px Orbitron\";\r\n            ctx.fillText(this.winner + \" WON!\", this.Width / 2, 150);\r\n        } else {\r\n            this.ballY = this.Height / 2;\r\n            this.ballX = this.Width / 2;\r\n            this.drawAll(ctx);\r\n            this.isGameOver = true;\r\n        }\r\n        ctx.font = \"14px Roboto Mono\";\r\n        ctx.fillText(\"Click anywhere to start a new game.\", this.Width / 2, 200);\r\n        document.addEventListener(\"mousedown\", () => {\r\n            this.isGameOver = false;\r\n            this.winner = \"\";\r\n        });\r\n    };\r\n\r\n    update() {\r\n\r\n        const ctx = this.canvas.getContext(\"2d\");\r\n        function KeyListener() {\r\n            this.pressedKeys = [];\r\n            this.keydown = (e) => {\r\n                this.pressedKeys[e.keyCode] = true;\r\n            };\r\n            this.keyup = (e) => {\r\n                this.pressedKeys[e.keyCode] = false;\r\n            };\r\n            document.addEventListener(\"keydown\", this.keydown.bind(this));\r\n            document.addEventListener(\"keyup\", this.keyup.bind(this));\r\n        }\r\n        KeyListener.prototype.isPressed = function (key) {\r\n            return this.pressedKeys[key] ? true : false;\r\n        };\r\n        KeyListener.prototype.addKeyPressListener = function (keyCode, callback) {\r\n            document.addEventListener(\"keypress\", (e) => {\r\n                if (e.keyCode === keyCode) callback(e);\r\n            });\r\n        };\r\n        const keys = new KeyListener();\r\n\r\n        // trigger 2 this.monkeys\r\n        this.butt1.addEventListener('click', () => {\r\n            this.ballY = this.Height / 2;\r\n            this.ballX = this.Width / 2;\r\n            this.GameOver(ctx);\r\n            this.monkey = true;\r\n            this.butt1.style.display = 'none';\r\n            this.butt2.style.display = 'initial';\r\n            this.btnRight.style.display = 'initial';\r\n        });\r\n        // trigger AI\r\n        this.butt2.addEventListener('click', () => {\r\n            this.GameOver(ctx);\r\n            this.monkey = false;\r\n            this.butt2.style.display = 'none';\r\n            this.butt1.style.display = 'initial';\r\n            this.btnRight.style.display = 'none';\r\n        });\r\n        // to block automatic start\r\n        this.GameOver(ctx);\r\n        // default 60fps\r\n        setInterval(() => {\r\n            if (this.isGameOver === false) {\r\n                this.moveAll(keys);\r\n                this.drawAll(ctx);\r\n            } else {\r\n                this.GameOver(ctx);\r\n            }\r\n        }, 1000 / this.fps);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas\r\n                    ref={(canvas) => { this.canvas = canvas }}\r\n                    width={this.gameWidth}\r\n                    height={this.gameHeight}\r\n                    id=\"gameCanvas\"\r\n                />\r\n                <div className=\"buttons buttonLeft\">W</div>\r\n                <div className=\"buttons buttonLeft\" id=\"buttonS\">S</div>\r\n                <div\r\n                    ref={(element) => {\r\n                        this.btnRight = element\r\n                    }}\r\n                    className=\"buttons buttonRight\" id=\"buttonUp\"\r\n                >Up</div>\r\n                <div\r\n                    ref={(element) => { this.btnRight = element }}\r\n                    className=\"buttons buttonRight\"\r\n                >Down</div>\r\n                <button\r\n                    ref={(butt1) => { this.butt1 = butt1 }}\r\n                    className=\"buttons\"\r\n                    id=\"butt1\"\r\n                >vs Computer</button>\r\n                <button\r\n                    ref={(butt2) => { this.butt2 = butt2 }}\r\n                    className=\"buttons\"\r\n                    id=\"butt2\"\r\n                >2 Players</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainGame;\r\n\r\n"]},"metadata":{},"sourceType":"module"}